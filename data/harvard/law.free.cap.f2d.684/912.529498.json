{
  "casebody": {
    "data": "<casebody firstpage=\"912\" lastpage=\"917\" xmlns=\"http://nrs.harvard.edu/urn-3:HLS.Libr.US_Case_Law.Schema.Case_Body:v1\">\n<parties data-order=\"0\" data-type=\"parties\" id=\"b988-5\">In re Rene K. PARDO and Remy Landau.</parties>\n<docketnumber data-order=\"1\" data-type=\"docketnumber\" id=\"b988-6\">Appeal No. 81-619.</docketnumber>\n<court data-order=\"2\" data-type=\"court\" id=\"b988-7\">United States Court of Customs and Patent Appeals.</court>\n<decisiondate data-order=\"3\" data-type=\"decisiondate\" id=\"b988-8\">Aug. 5, 1982.</decisiondate>\n<attorneys data-order=\"4\" data-type=\"attorneys\" id=\"b989-5\"><page-number citation-index=\"1\" label=\"913\">*913</page-number>Rene K. Pardo and Remy Landau, of Ontario, Canada, for appellants, pro se.</attorneys>\n<attorneys data-order=\"5\" data-type=\"attorneys\" id=\"b989-6\">Joseph F. Nakamura, Sol., Jere W. Sears, Deputy Sol., Washington, D. C., for Patent and Trademark Office.</attorneys>\n<p data-order=\"6\" data-type=\"judges\" id=\"b989-7\">Before MARKEY, Chief Judge, RICH, BALDWIN, MILLER, and NIES, Associate Judges.</p>\n<opinion data-order=\"7\" data-type=\"opinion\" id=\"x999-1\" type=\"majority\">\n<author id=\"b989-8\">MILLER, Judge.</author>\n<p id=\"b989-9\">This is an ex parte <em>pro se </em>appeal from a decision of the Patent and Trademark Office (\u201cPTO\u201d) Board of Appeals (\u201cboard\u201d) affirming the examiner\u2019s rejection of appellants\u2019 claims 26-61<footnotemark>1</footnotemark> under 35 U.S.C. \u00a7 101 as directed to nonstatutory subject matter and, pursuant to 37 CFR 1.196(b), entering a new rejection of the same claims for obviousness, 35 U.S.C. \u00a7 103. We reverse.</p>\n<p id=\"b989-10\">BACKGROUND</p>\n<p id=\"Ap2\">\n<em>The Invention</em>\n</p>\n<p id=\"b989-11\">Appellants characterize their invention as a method for controlling the internal operations of a computer. The invention converts a computer from a sequential processor (which executes program instructions in the order in which they are presented) to a processor which is not dependent on the order in which it receives program steps. This capability is important when the execution of certain program steps requires as a condition precedent the results of other program steps.</p>\n<p id=\"b989-12\">Appellants\u2019 specification describes the invention as involving an \u201calgorithm\u201d of a compiler program. Claims 26-43 are directed to a method of controlling the internal operations of a programmed computer, and claims 44-61 are directed to a computer controlled according to the method. Claims 30 and 48 are representative:<footnotemark>2</footnotemark></p>\n<blockquote id=\"b989-13\">30. A process of operating a general purpose data processor of known type to enable the data processor to execute formulas in an object program comprising a plurality of formulas, such that the same results will be produced when using the same given data, regardless of the sequence in which said formulas are presented in said object program, comprising the steps of:</blockquote>\n<blockquote id=\"b989-14\">(a) examining each of said formulas in a storage area of the data processor to determine which formulas can be designated as defined;</blockquote>\n<blockquote id=\"b989-15\">(b) executing, in the sequence in which each formula is designated as defined, said formulas designated as defined;</blockquote>\n<blockquote id=\"b989-16\">(c) repeating steps (a) and (b) for at least undefined formulas as many times as required until all said formulas have been designated as defined and have been executed;</blockquote>\n<blockquote id=\"b989-17\">whereby to produce the same results upon execution of the formulas in the sequence recited in step (b) when using the same given data, regardless of the order in which said formulas were presented in the object program prior to said process.</blockquote>\n<blockquote id=\"b989-18\">48. A general purpose data processor of known type operating under the control of a stored program containing a set of instructions for enabling the data processor to execute formulas in an object program comprising a plurality of formulas, such that the same results will be produced when using the same given <page-number citation-index=\"1\" label=\"914\">*914</page-number>data, regardless of the sequence in which said formulas are presented in said object program, said data processor performing the following functions:</blockquote>\n<blockquote id=\"b990-4\">(a) examining each of said formulas in a storage area of the data processor to determine which formulas can be designated as defined;</blockquote>\n<blockquote id=\"b990-5\">(b) executing, in the sequence in which each formula is designated as defined, said formulas designated as defined;</blockquote>\n<blockquote id=\"b990-6\">(c) repeating steps (a) and (b) for at least undefined formulas as many times as required until all said formulas have been designated as defined and have been executed;</blockquote>\n<blockquote id=\"b990-7\">whereby to produce the same results upon execution of the formulas in the sequence recited in step (b) when using the same given data, regardless of the order in which said formulas were presented in the object program prior to said functions.</blockquote>\n<p id=\"b990-8\">\n<em>Prosecution History</em>\n</p>\n<p id=\"b990-9\">The application was filed August 12, 1970. On July 28, 1972, the examiner indicated that all claims were allowable and that prosecution on the merits was closed. A notice of allowance, however, was not forthcoming, and subsequent to the decision in <em>Gottschalk v. Benson, </em>409 U.S. 63, 93 S.Ct. 253, 34 L.Ed.2d 273, 175 USPQ 673 (1972), the PTO reopened prosecution and rejected the claims under 35 U.S.C. \u00a7 101.<footnotemark>3</footnotemark> <em>The Board\u2019s Decision</em></p>\n<p id=\"b990-10\">The board affirmed the examiner\u2019s rejection, stating:</p>\n<blockquote id=\"b990-11\">The courts above us have consistently said that a claim directed in its entirety to an algorithm is nonstatutory. An algorithm is defined ... as a procedure for solving a given type of mathematical problem.</blockquote>\n<blockquote id=\"b990-12\">The appellants say at page 9 of the specification that:</blockquote>\n<blockquote id=\"b990-15\">\u201cThe algorithm or key process of the compiler program 12 will now be described with reference to the flowchart of Figure 2.\u201d</blockquote>\n<blockquote id=\"b990-16\">The appellants also tell us at the bottom of page 13 of the specification that variations of the preferred embodiment still use the same basic algorithm.</blockquote>\n<blockquote id=\"b990-17\">Construing the claims at bar in light of the specification, which we must do, they are in their entirety directed to the algorithm of the compiler, or variations thereof, by the appellants\u2019 own admissions in their specification. Hence, the claims do not pass muster under 35 USC 101. [Citations omitted.]</blockquote>\n<p id=\"b990-18\">Thus, the board treated appellants\u2019 use of the word \u201calgorithm\u201d to describe their invention as an admission that their claims are drawn to nonstatutory subject matter.</p>\n<p id=\"b990-19\">The board then entered the following new rejection under 37 CFR 1.196(b):</p>\n<blockquote id=\"b990-20\">Claims 26 through 61 are rejected under 35 USC 103 as obvious. As we said before, the appellants\u2019 invention is directed to a method and apparatus for automatically rearranging random formulae for sequential execution by a computer. Suppose a user provides the following information:</blockquote>\n<blockquote id=\"b990-21\">(1) values for a, b, c and d;</blockquote>\n<blockquote id=\"b990-22\">(2) A = X + Y;</blockquote>\n<blockquote id=\"b990-23\">(3) X = a + b; and</blockquote>\n<blockquote id=\"b990-24\">(4) Y = c + d.</blockquote>\n<blockquote id=\"b990-25\">Obviously, a computer cannot execute these operations in the order presented because step (2) cannot be performed until the results of steps (3) and (4) are obtained. What the appellants\u2019 algorithm does is rearrange the order of the formulae as presented by the user so that the computer can execute the operations. Thus, using our example, the appellants\u2019 algorithmic process would rearrange the formulae as follows:</blockquote>\n<blockquote id=\"b990-26\">(1) values for a, b, c and d;</blockquote>\n<blockquote id=\"b990-27\">(2) X = a + b;</blockquote>\n<blockquote id=\"b991-4\"><page-number citation-index=\"1\" label=\"915\">*915</page-number>(3) Y = c + d; and</blockquote>\n<blockquote id=\"b991-5\">(4) A = X + Y.</blockquote>\n<blockquote id=\"b991-6\">These formulae, as arranged, can be executed by the computer in a logical, sequential fashion. In our opinion, this algorithmic process would have been obvious to the artisan facing the problem within the meaning of 35 USC 103.</blockquote>\n<p id=\"b991-7\">OPINION</p>\n<p id=\"b991-8\">The issues before us are: (1) whether appellants\u2019 claims constitute statutory subject matter; and (2) whether the invention defined by the claims would have been obvious to a person of ordinary skill in the art on August 12, 1970, the date of appellants\u2019 constructive reduction to practice.</p>\n<p id=\"b991-9\">I. Statutory Subject Matter</p>\n<p id=\"AJ2\">A. No Admission</p>\n<p id=\"b991-10\">The method adopted by this court for analyzing mathematical algorithm-statutory subject matter cases in <em>In re Freeman, </em>573 F.2d 1237, 197 U.S.P.Q. 464 (CCPA 1978), as modified by <em>In re Walter, </em>618 F.2d 758, 205 U.S.P.Q. 397 (CCPA 1980), comprises a two part test: First, the claim is analyzed to determine whether a mathematical algorithm is directly or indirectly recited. Next, if a mathematical algorithm is found, the claim as a whole is further analyzed to determine whether the algorithm is \u201capplied in any manner to physical elements or process steps,\u201d and, if it is, it \u201cpasses muster under \u00a7 101.\u201d 618 F.2d at 767, 205 U.S.P.Q. at 407. The second part of this test conforms to the opinion of the Supreme Court in <em>Diamond v. Diehr, </em>450 U.S. 175, 101 S.Ct. 1048, 67 L.Ed.2d 155, 209 U.S.P.Q. 1 (1981). <em>In re Abele, </em>684 F.2d 902 (CCPA 1982); <em>In re Taner, </em>681 F.2d 787, at 790, 791 (CCPA 1982).</p>\n<p id=\"b991-11\">Appellants argue that their use of the word \u201calgorithm\u201d to describe their process is an insufficient basis to hold that their claims are drawn to nonstatutory subject matter. It has often been recognized that the word \u201calgorithm\u201d is subject to a number of definitions.<footnotemark>4</footnotemark> The Supreme Court has defined it as a \u201cprocedure for solving a given type of mathematical problem.\u201d <em>Diamond v. Diehr, supra </em>450 U.S. at 186, 101 S.Ct. at 1056, 209 U.S.P.Q. at 8; <em>Parker v. Flook, </em>437 U.S. 584, 585 n.l, 98 S.Ct. 2522, 2523 n.l, 57 L.Ed.2d 451, 198 U.S.P.Q. 193, 195 n.l (1978); <em>Gottschalk v. Benson, supra </em>409 U.S. at 65, 93 S.Ct. at 254, 175 U.S.P.Q. at 674 (1972). It is this type of algorithm that constitutes nonstatutory subject matter, and this court has consistently rejected attempts to enlarge the \u201cmathematical algorithm\u201d exception to the definition of patentable subject matter in section 101 to include nonmathematical algorithms. In <em>In re Freeman, </em>supra at 1246, 197 U.S.P.Q. at 471, the court said, \u201ca refusal to recognize that <em>Benson </em>was concerned only with <em>mathematical </em>algorithms leads to the absurd view that the Court was reading the word \u2018process\u2019 out of the statute.\u201d Similarly, in <em>In re Chatfield, </em>545 F..2d 152, 156 n.5, 191 U.S.P.Q. 730, 734 n.5 (CCPA 1976), <em>cert. denied, </em>434 U.S. 875, 98 S.Ct. 226, 54 L.Ed.2d 155 (1977), this court stated: \u201cIt would be unnecessarily detrimental to our patent system to deny inventors patent protection on the <em>sole </em>ground that their contribution could be broadly termed an \u2018algorithm.\u2019 \u201d <em>See also In re Sarkar, </em>588 F.2d 1330, 1333, 200 U.S.P.Q. 132, 137 (CCPA 1978); <em>In re Toma, </em>575 F.2d 872, 877, 197 U.S.P.Q. 852, 856 (CCPA 1978).</p>\n<p id=\"b991-15\">Appellants filed their patent application containing the word \u201calgorithm\u201d more than two years before the decision in <em>Gottschalk v. Benson, supra, </em>where the court used the word in a limited sense to describe nonstatutory subject matter. There is no indication that \u201calgorithm,\u201d as <page-number citation-index=\"1\" label=\"916\">*916</page-number>used by appellants, means \u201cmathematical algorithm\u201d as that term has been used by the Supreme Court. Therefore, appellants\u2019 use of the term to describe their invention is not an admission that they are claiming nonstatutory subject matter and is not dis-positive of the issue before us.</p>\n<p id=\"b992-4\">B. Mathematical Algorithm</p>\n<p id=\"AVL\">Applying the first part of the <em>Freeman </em>analysis to the appealed claims, we are unable to find any mathematical formula, calculation, or algorithm either directly or indirectly recited in the claimed steps of examining, compiling, storing, and executing. Indeed, the examiner acknowledged that \u201c[t]he \u2018algorithm\u2019 of the present application is not \u2018mathematical\u2019 (although it deals with the proper sequence for performing mathematics), but it does establish the rules which are to be followed by a data processor and which appellants want to protect when so used.\u201d We perceive no essential distinction between appellants\u2019 claimed invention and the subject matter of <em>In re Chatfield, supra, </em>which comprised a time-sharing method for operating a computer on several programs simultaneously. <em>Chat-field, </em>like this case, involved a method for controlling the internal operations of a computer to govern the manner in which programs are executed.</p>\n<p id=\"b992-5\">Nevertheless, despite the absence of an expressly-recited mathematical algorithm, the solicitor argues that appellants\u2019 claims <em>indirectly </em>amount to mathematical calculations, because the programs subjected to appellants\u2019 process are exemplified as mathematical formulae. This court\u2019s response to a similar argument in <em>In re Bradley, </em>600 F.2d 807, 812, 202 U.S.P.Q. 480, 485 (CCPA 1979), <em>aff\u2019d by an equally divided court, </em>450 U.S. 381, 101 S.Ct. 1495, 67 L.Ed.2d 311 (1981), is equally applicable here:</p>\n<blockquote id=\"b992-10\">We see no difference in this regard, with respect to being within \u00a7 101, between appellants\u2019 claimed invention and a strictly mechanical adding machine, which is certainly statutory if claimed in a manner which does not embrace any particular calculation that the machine is capable of making.</blockquote>\n<p id=\"b992-11\">Appellants\u2019 method claims are directed to executing programs in a computer. The method operates on <em>any </em>program and <em>any </em>formula which may be input, regardless of mathematical content. That a computer controlled according to the invention is capable of handling mathematics is irrelevant to the question of whether a mathematical algorithm is recited by the claims.</p>\n<p id=\"b992-12\">Section 101 encompasses a broad range of subject matter.<footnotemark>5</footnotemark> \u201c[A] claim drawn to subject matter otherwise statutory does not become nonstatutory simply because it uses a mathematical formula, computer program, or digital computer.\u201d <em>Diamond v. Diehr, supra </em>450 U.S. at 187, 101 S.Ct. at 1056, 209 U.S.P.Q. at 8. Indeed, any process, machine, manufacture, or composition of matter constitutes statutory subject matter <em>unless </em>it falls within a judicially determined exception to section 101. <em>In re Gelnovatch, </em>595 F.2d 32, 38, 201 U.S.P.Q. 136, 142 (CCPA 1979); <em>In re Sarkar, supra </em>at 1333, 200 U.S.P.Q. at 137. The appealed claims do not fall within any such exception.<footnotemark>6</footnotemark></p>\n<p id=\"b993-4\"><page-number citation-index=\"1\" label=\"917\">*917</page-number>Accordingly, we hold that appellants\u2019 claims constitute statutory subject matter, and the section 101 rejection is <em>reversed.</em></p>\n<p id=\"b993-5\">II. <em>Obviousness</em></p>\n<p id=\"b993-6\">The obviousness rejection made by the board is only applicable to claims 26-27, 32-33, 40-41, 44-45, 50-51, and 58-59. The remainder of the claims do not require rearrangement of the process instructions, but achieve the stated objective of nonsequential operation in a different manner.</p>\n<p id=\"b993-7\">The board cited no references in support of the rejection, but relied on its own logic to hold that the invention would have been obvious. The Solicitor cites <em>In re Fox, </em>471 F.2d 1405, 176 U.S.P.Q. 340 (CCPA 1973) and <em>In re Howard, </em>55 C.C.P.A. 1121, 394 F.2d 869, 157 U.S.P.Q. 615 (1968), for the proposition that citation of authority to support a rejection is not always necessary. Those cases dealt with taking judicial notice of \u201ccommon practice of wide notoriety, well within the ambit of judicial cognizance.\u201d <em>In re Howard, supra, </em>at 1123, 394 F.2d at 870, 157 U.S.P.Q. at 616.</p>\n<p id=\"b993-8\">In the present case, the board, in entering the new rejection, exemplified a portion of one claimed method <em>(viz., </em>rearrangement of the order of the formulae) and expressed the opinion that it would have been obvious to one of ordinary skill in the art in 1970. However, the skill of a person of ordinary skill in either computer programming or design in 1970 is not a proper subject for judicial notice today, no matter how simple a claimed invention may seem in hindsight. Appellants point out that computers were in general use as sequential processors for 18 years prior to their filing date, and yet the PTO has been unable to cite even one reference against their claims. As this court said in <em>In re Ahlert, </em>57 C.C.P.A. 1023, 1027, 424 F.2d 1088, 1091, 165 U.S.P.Q. 418, 420-21 (1970):</p>\n<blockquote id=\"b993-9\">[Tjhis court will always construe [the rule permitting judicial notice] narrowly and will regard facts found in such manner with an eye toward narrowing the scope of any conclusions to be drawn therefrom. Assertions of technical facts in areas of esoteric technology must always be supported by citation to some reference work recognized as standard in the pertinent art and the appellant given, in the Patent Office, the opportunity to challenge the correctness of the assertion or the notoriety or repute of the cited reference. <em>Cf. In re Cofer, </em>53 C.C.P.A. 830, 354 F.2d 664, 148 U.S.P.Q. 268 (1966), <em>In re Borst, </em>52 C.C.P.A. 1398, 345 F.2d 851, 145 U.S.P.Q. 554 (1965). Allegations concerning specific \u201cknowledge\u201d of the prior art, which might be peculiar to a particular art should also be supported and the appellant similarly given the opportunity to make a challenge. <em>See In re Spormann, </em>53 C.C.P.A. 1375, 363 F.2d 444, 150 U.S.P.Q. 449 (1966).</blockquote>\n<p id=\"b993-11\">In making the obviousness rejection, the board failed to follow the three-pronged analysis required by <em>Graham v. John Deere Co., </em>383 U.S. 1, 86 S.Ct. 684, 15 L.Ed.2d 545 (1966), whenever the obviousness of patent claims is in issue. The board did not determine the scope and content of the prior art or even indicate that there was any prior art; it did not determine the differences between the prior art and the claimed invention; and it did not ascertain the level of ordinary skill in the art at the time the invention was made.</p>\n<p id=\"b993-12\">Accordingly, we hold that the PTO has failed to establish that the claims would have been obvious to a person of ordinary skill in the art on August 12, 1970, and the section 103 rejection must also be <em>reversed.</em></p>\n<p id=\"b993-13\">REVERSED.</p>\n<footnote label=\"1\">\n<p id=\"b989-19\">. Application serial No. 63,185, filed August 12, 1970, for: \u201cA Process and Apparatus for Converting a Source Program into an Object Program.\u201d</p>\n</footnote>\n<footnote label=\"2\">\n<p id=\"ArEV\">. Other claims achieve nonsequential operation by reordering program steps for later sequential execution or storing an indication of the order of execution.</p>\n</footnote>\n<footnote label=\"3\">\n<p id=\"b990-13\">. 35 U.S.C. \u00a7 101 provides:</p>\n<blockquote id=\"b990-14\">Whoever invents or discovers any new and useful process, machine, manufacture, or composition of matter, or any new and useful improvement thereof, may obtain a patent therefor, subject to the conditions and requirements of this title.</blockquote>\n</footnote>\n<footnote label=\"4\">\n<p id=\"b991-12\">. The <em>Diehr </em>Court declined the Government\u2019s invitation to broaden its definition of nonstatu-tory algorithm, stating:</p>\n<blockquote id=\"b991-13\">Our previous decisions regarding the patenta-bility of \u201calgorithms\u201d are necessarily limited to the more narrow definition employed by the Court, and we do not pass judgment on whether processes falling outside the definition previously used by this Court, but within the definition offered by the petitioner, would be patentable subject matter.</blockquote>\n<p id=\"b991-17\">450 U.S. at 186 n.9, 101 S.Ct. at 1056 n.9, 209 U.S.P.Q. at 8 n.9.</p>\n</footnote>\n<footnote label=\"5\">\n<p id=\"b992-6\">. As the Supreme Court said regarding section 101 in <em>Diamond v. Chakrabarty, </em>447 U.S. 303, 308-09, 100 S.Ct. 2204, 2207, 65 L.Ed.2d 144, 206 U.S.P.Q. 193, 197 (1980):</p>\n<blockquote id=\"b992-7\">In choosing such expansive terms as \u201cmanufacture\u201d and \u201ccomposition of matter,\u201d modified by the comprehensive \u201cany,\u201d Congress plainly contemplated that the patent laws would be given wide scope.</blockquote>\n<blockquote id=\"b992-8\">The relevant legislative history also supports a broad construction.... The Committee Reports accompanying the 1952 act inform us that Congress intended statutory subject matter to \u201cinclude anything under</blockquote>\n<blockquote id=\"b992-13\">the sun that is made by man.\u201d S.Rep.No. 1979, 82d Cong., 2d Sess., 5 (1952); H.R.Rep. No. 1923, 82d Cong., 2d Sess., 6 (1952).</blockquote>\n<blockquote id=\"b992-16\">[Footnote omitted.]</blockquote>\n</footnote>\n<footnote label=\"6\">\n<p id=\"b992-17\">. Although some of appellants\u2019 claims are drawn to a \u201cgeneral purpose data processor of known type operating under the control of a stored program,\u201d such claims are treated as indistinguishable from the method claims for purposes of section 101 unless it is demonstrated that the claims are drawn to specific apparatus distinct from other apparatus capable of performing the identical functions. <em>In re Walter, supra </em>at 768, 205 U.S.P.Q. at 407-08.</p>\n</footnote>\n</opinion>\n</casebody>\n",
    "status": "ok"
  }
}