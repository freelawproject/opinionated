{
  "casebody": {
    "data": "<casebody firstpage=\"807\" lastpage=\"813\" xmlns=\"http://nrs.harvard.edu/urn-3:HLS.Libr.US_Case_Law.Schema.Case_Body:v1\">\n<parties data-order=\"0\" data-type=\"parties\" id=\"b897-13\">In the Matter of the Application of John J. BRADLEY and Benjamin S. Franklin.</parties>\n<docketnumber data-order=\"1\" data-type=\"docketnumber\" id=\"b897-14\">Appeal No. 79-533.</docketnumber>\n<court data-order=\"2\" data-type=\"court\" id=\"b897-15\">United States Court of Customs and Patent Appeals.</court>\n<decisiondate data-order=\"3\" data-type=\"decisiondate\" id=\"b897-16\">July 5, 1979.</decisiondate>\n<attorneys data-order=\"4\" data-type=\"attorneys\" id=\"b898-6\"><page-number citation-index=\"1\" label=\"808\">*808</page-number>Nicholas Prasinos, Waltham, Mass., attorney of record, for appellants; Ronald T. Reiling, Faith F. Driscoll, Waltham, Mass., of counsel.</attorneys>\n<attorneys data-order=\"5\" data-type=\"attorneys\" id=\"b898-7\">Joseph F. Nakamura, Washington, D. C., for the Commissioner of Patents; Thomas E. Lynch, Washington, D. C., of counsel.</attorneys>\n<p data-order=\"6\" data-type=\"judges\" id=\"b898-8\">Before MARKEY, Chief Judge, RICH, BALDWIN, and MILLER, Judges, and COWEN,<footnotemark>*</footnotemark> Senior Judge.</p>\n<footnote data-order=\"7\" data-type=\"footnote\" id=\"x999-1\" label=\"*\">\n<p id=\"b898-13\"> The Honorable Wilson Cowen, U. S. Court of Claims, sitting by designation.</p>\n</footnote>\n<opinion data-order=\"8\" data-type=\"opinion\" id=\"x999-2\" type=\"majority\">\n<author id=\"b898-9\">RICH, Judge.</author>\n<p id=\"b898-10\">This appeal is from the decision of the Patent and Trademark Office (PTO) Board of Appeals (board) affirming the rejection of claims 1-6, all of the claims in appellants\u2019 application serial No. 570,331, filed April 21, 1975, for \u201cSwitch System Base Mechanism,\u201d as being drawn to subject matter which is non-statutory under 35 U.S.C. \u00a7 101. We reverse.</p>\n<p id=\"b898-11\">\n<em>The Invention</em>\n</p>\n<p id=\"b898-12\">Appellants\u2019 invention is in the field of computer technology. It does not relate to computer applications, i. e., any specific task that a computer is asked to perform, but rather to the internal operation of the computer and its ability to manage efficiently its operation in a multiprogrammed format. A multiprogrammed format is one in which the computer is capable of executing more than one program, and thus perform more than one application at the same time, without the need to reprogram the computer for each task it must perform.</p>\n<p id=\"b898-16\">Specifically, the invention relates to altering or repositioning information in the computer\u2019s system base. The system base of a computer is a fixed area in main memory which acts as the root for all information structures in the computer. In high performance computer systems, it is very advantageous to store portions of the system base in \u201cscratchpad\u201d registers <footnotemark>1</footnotemark> located in the central processing unit (CPU) of the computer rather than in main memory. This greatly enhances the speed of operation of the computer because the access time (the time it takes to retrieve information from a given place) associated with the scratchpad registers is less than that associated with main memory. A problem arises, however, because a programmer may wish to change the positions or content of information in the system base which happens to be located in the scratchpad registers. These registers are \u201cinvisible\u201d to the programmer since, unlike main memory, they cannot be accessed by software (computer programs). Prior art systems altered the system base information resident in the scratchpad registers by either reinitializing the system base (completely reloading the system base containing the new information), a process which consumes a considerable amount of time, or by using software which takes advantage of the model-dependent properties of the particular computer. The latter method has the undesirable effect of resorting to reliance on model-dependent software, which is unacceptable to some computer users.</p>\n<p id=\"b898-17\">Appellants\u2019 invention enables system base information to be altered without having to <page-number citation-index=\"1\" label=\"809\">*809</page-number>resort to these techniques and their accompanying drawbacks. They accomplish their result by employing a \u201cfirmware\u201d module, consisting of hardware elements permanently programmed with a microcode, which directs the data transfers, between the scratchpad registers and the system base located ,in main memory, which are necessary to effect the alteration.</p>\n<p id=\"b899-5\">Claim 1 is representative of the appealed claims:</p>\n<blockquote id=\"b899-6\">1. In a multiprogramming computer system having a main memory, a central processing unit (CPU) coupled to said main memory, said (CPU) controlling the state of a plurality of groups of processes being in a running, ready, wait or suspended state, said computer system also having scratchpad registers being accessible to an operating system for controlling said multiprogramming computer system, a data structure for storing coded signals for communicating between said processes and said operating system, and said scratchpad registers, said data structure comprising:</blockquote>\n<blockquote id=\"b899-7\">(a) first means in said data structure and communicating with said operating system for storing coded signals indicative of an address for a selected one of said processes;</blockquote>\n<blockquote id=\"b899-8\">(b) second means in said first means for storing coded signals indicating priority of said selected one of said</blockquote>\n<blockquote id=\"AMQK\">processes in relation to others of said processes for obtaining control of said CPU when ready;</blockquote>\n<blockquote id=\"b899-10\">(c) third means in said data structure and communicating with said operating system, for storing coded signals indicative of an address for a selected one of said plurality of groups of processes, and,</blockquote>\n<blockquote id=\"b899-11\">(d) fourth means coupled to said data structure and said scratchpad registers, for generating signals causing the changing of information in said data structure and said scratchpad registers.</blockquote>\n<p id=\"b899-12\">\n<em>The Rejection</em>\n</p>\n<p id=\"b899-13\">The examiner rejected the appealed claims on the authority of <em>Gottschalk </em>v. <em>Benson, </em>409 U.S. 63, 93 S.Ct. 253, 34 L.Ed.2d 273, 175 USPQ 673 (1972) (hereinafter <em>Benson) </em>before the Supreme Court\u2019s decision in <em>Parker v. Flook, </em>437 U.S. 584, 98 S.Ct. 2522, 57 L.Ed.2d 451, 198 USPQ 193 (1978) (hereinafter <em>Flook). </em>In his final rejection, dated October 27, 1976, the examiner stated that the subject matter \u201cdeemed as the invention\u201d is \u201ca data structure\u201d and then made the following analysis:</p>\n<blockquote id=\"b899-14\">The term \u201cdata structure\u201d as recited in the claim is comprised of four entities described as \u201cfirst means\u201d, \u201csecond means\u201d, \u201cthird means\u201d, and \u201cfourth means.\u201d Whether these so called \u201cmeans\u201d are hardware structure which store coded signals for performing a particular function or whether they refer to coded signals representing computer control words per se, any life which the claim may have in view of that which is admittedly old in the art, resides in the \u201ctechnique\u201d (page 5, line 4) or \u201cswitch-system base instruction\u201d (page 5, lines 13 and 14) for solving the problem of changing information of the system base which is located in scratchpad registers which software cannot access (page 4, line 20). The invention then is embodied in the coded signals representing instructions to the computer, the running process word RPW (first means of claim), priority level indicator word PRI (second means), J Table word and G Table word (third means), and micro-instructions of Figures 15c [sic, 15b] and 15c as found in the central store 1301. The invention resides in a \u201cdata structure\u201d or an algorithm designed to control the multiprogramming computer to solve the particular problem indicated.</blockquote>\n<blockquote id=\"b899-15\">Under the ruling in <em>Gottschalk v. Benson, </em>[409 U.S. 63, 93 S.Ct. 253, 34 L.Ed.2d 273] 175 USPQ 673, the instant claims, depending upon a program implemented algorithm for patentability, are deemed nonstatutory subject matter.</blockquote>\n<p id=\"b899-16\">Appellants requested reconsideration and argued that their claims are directed to <page-number citation-index=\"1\" label=\"810\">*810</page-number>data structures in hardware which are \u201cspecific new, novel and unobvious [in] arrangement.\u201d They asserted that by stating that the invention resided in a \u201ctechnique\u201d, the examiner was clearly disregarding the claims and interpreting the invention strictly on the basis of what is found in the specification, because no \u201ctechnique\u201d is <em>claimed. </em>They stated that even if a technique (i. e., process) were claimed, <em>Benson </em>does not render all such inventions nonstat-utory, and that their invention does not involve a <em>mathematical </em>algorithm.<footnotemark>2</footnotemark></p>\n<p id=\"b900-4\">In his Answer before the board, the examiner noted that all of the limitations found in claim 1 were old in the art and that the \u201cclaim is thus reciting prior art coupled with subject matter which the U. S. Supreme Court has found to be non-statutory in <em>Benson.\" </em>Appellants responded in their reply brief that it makes no difference whether individual elements are old in the art and that it is the elements in combination which define the invention as a whole.</p>\n<p id=\"b900-5\">\n<em>The Board</em>\n</p>\n<p id=\"b900-6\">The board rendered its decision on September 20, 1978, after the Supreme Court\u2019s decision in <em>Fiook. </em>After incorrectly stating that none of the claims recited the term \u201cfirmware,\u201d<footnotemark>3</footnotemark> the board analyzed appellants\u2019 claims element by element, concluding that the only novel arrangement of the recited structures resided in the micropro-gramming, \u201cwhich together with its attendant memory hardware appears to constitute firmware.\u201d</p>\n<p id=\"b900-11\">Apparently on the basis of <em>Flook, </em>the board affirmed the rejection because it was of the opinion that the appealed claims are directed to a method of calculation or mathematical algorithm. The board found the claims similar to the claims at issue in <em>In re Waldbaum, </em>559 F.2d 611, 194 USPQ 465 (Cust. &amp; Pat.App.1977), which included language characterized by the board as \u201cobviously related to calculating and mathematical problem solving.\u201d <footnotemark>4</footnotemark> Although the claims here at issue do not contain similar mathematical language, the board said that this \u201cdoes not make the functions attendant the \u2018means\u2019 of appellants\u2019 claims any less mathematical or less related to an algorithm within the meaning assigned that term by the USSC in <em>Benson.\"</em></p>\n<p id=\"b900-12\">To support its conclusion that the appealed claims are mathematical in nature, the board relied on a statement in the specification to the effect that all of the data in the computer are in binary form, but may be interpreted as binary coded decimal, decimal or alphanumeric. We reproduce the board\u2019s reasoning in full:</p>\n<blockquote id=\"b900-13\">Since digital computers normally operate in some numerical radix, binary, binary coded decimal, or the like, we consider the operation of appellants\u2019 claimed invention to be mathematical.</blockquote>\n<blockquote id=\"b901-4\"><page-number citation-index=\"1\" label=\"811\">*811</page-number>Every operation performed in appellants\u2019 invention as claimed involves the accommodation of data and instructions to the size of the registers in memory, and to the positional assignment to the registers in memory by the use of some numerical measure or quantity effected by way of electrical signals. In whatever form the instructions employed in appellants\u2019 invention are characterized, numerical or otherwise, we think it is accurate to say that the operation of appellants\u2019 structure is mathematical and that the instructions constitute a procedure which is algorithmic in character, to the same degree as that of the Waldbaum structure and that satisfactory operation of the apparatus claimed represents the successful solution of a mathematical problem falling within the definition of algorithm supplied in <em>Benson </em>and reiterated in <em>Flook.</em></blockquote>\n<blockquote id=\"b901-5\">Here the method of calculation is to be used in the internal operation of the computer system and the claims recite such an end use by means of the functions recited for the various means. A claim for an improved method of calculation, even when tied to a specific end use, is unpatentable subject matter under 35 USC 101, <em>Flook supra.</em></blockquote>\n<p id=\"b901-6\">In s\u00fammary, the board stated that the claims are drawn to apparatus in form only, and couple the apparatus (which it asserts is old in the art) \u201cwith subject matter, namely, programming, which is nonstatutory under the <em>Benson, </em>Christensen,<footnotemark>5</footnotemark> <em>Waldbaum </em>and <em>Flook </em>cases * * *.\u201d</p>\n<p id=\"b901-12\">OPINION</p>\n<p id=\"b901-13\">The examiner\u2019s basis for the rejection is grounded on the erroneous interpretation of the Supreme Court\u2019s decision and opinion in <em>Benson, </em>namely, that all computer program or program-related inventions are nonstatutory under \u00a7 101. Both the Supreme Court<footnotemark>6</footnotemark> and this court<footnotemark>7</footnotemark> have thoroughly repudiated this view. Our decision, therefore, is based solely on the analysis made by the board.</p>\n<p id=\"b901-14\">The board said that the claims do not <em>directly </em>recite a mathematical formula, algorithm, or method of calculation, but, nevertheless, held the claims to be mathematical in nature. As appears from the quoted portion of the board opinion, the board regarded the fact that digital computers operate in some number radix as conclusive on the issue of whether the appealed claims recite a mathematical algorithm in the <em>Benson </em>and <em>Flook </em>sense. The board did not, however, direct attention to any specific formula it thought is utilized, or to what, if anything, the mathematical calculations alleged to be present in the claims are directed.</p>\n<p id=\"b901-15\">We do not agree with the board. We are constrained to reject its reasoning. Such reasoning leads to the conclusion that any computer-related invention must be regarded as mathematical in nature, a conclusion which is not compelled by either <em>Benson </em>or <em>Flook.</em></p>\n<p id=\"b901-16\">The board\u2019s analysis confuses <em>what </em>the computer does with <em>how </em>it is done. It is of <page-number citation-index=\"1\" label=\"812\">*812</page-number>course true that a modern digital computer manipulates data, usually in binary form, by performing mathematical operations, such as addition, subtraction, multiplication, division, or bit shifting, on the data. But this is only <em>how </em>the computer does what it does. Of importance is the significance of the data and their manipulation in the real world, i.\u2019e., <em>what </em>the computer is doing. It may represent the solution of the Pythagorean theorem, or a complex vector equation describing the behavior of a rocket in flight, in which case the computer is performing a mathematical algorithm and solving an equation. This is what was involved in <em>Benson </em>and <em>Flook. </em>On the other hand, it may be that the data and the manipulations performed thereon by the computer, when viewed on the human level, represent the contents of a page of the Milwaukee telephone directory, or the text of a court opinion retrieved by a computerized law service. Such information is utterly devoid of mathematical significance. Thus, the board\u2019s analysis does nothing but provide a quick and automatic negative answer to the \u00a7 101 question simply because a computer program is involved.</p>\n<p id=\"b902-4\">Appellants have continuously insisted that they are claiming a new and unobvious combination of <em>hardware elements, </em>i. e., a new machine or apparatus.<footnotemark>8</footnotemark> The issues of novelty and unobviousness <footnotemark>9</footnotemark> are not before us, but we agree with appellants insofar as they characterize their invention as a machine or apparatus. The board likewise seems to agree on this point. In its opinion, it identifies all of the \u201cmeans\u201d of appellants\u2019 claim 1 as structural hardware elements, such as registers, portions of main memory and control store,<footnotemark>10</footnotemark> and other computer components. Thus, the claim falls literally within the boundaries of \u00a7 101.</p>\n<p id=\"b902-8\">Appellants have characterized their combination of hardware elements as a mechanism which enables the computer to alter information in its system base in a manner not previously possible. They are in no way claiming the altered information; in fact, the particular information acted upon by appellants\u2019 invention is irrelevant to the operation of the invention itself. We see no difference in this regard, with respect to being within \u00a7 101, between appellants\u2019 claimed invention and a strictly mechanical adding machine, which is certainly statutory if claimed in a manner which does not embrace any particular calculation that the machine is capable of making.</p>\n<p id=\"b902-9\">The PTO regards as significant the fact that firmware is involved in the present invention. In a sense, firmware may be likened to software (computer programs); it is information which has been embodied into hardware by, for example, destroying fusible links in a read only memory (ROM) array. In appellants\u2019 invention, the information contained within the firmware, which is located in the control store of the computer, directs the desired information transfers within the system base.</p>\n<p id=\"b902-10\">If appellants were claiming the information embodied in the firmware or the firmware itself, per se, a different case would be presented. We express no opinion on the statutory nature of such an invention, a question not before us. Appellants are claiming a combination of hardware elements, one of which happens to be a portion of the computer\u2019s control store micropro-grammed in a particular manner. It is this subject matter with which we must deal.</p>\n<p id=\"b902-11\">From our reading of appellants\u2019 specification, their claimed \u201cdata structure\u201d is merely that which results from the arrangement of the recited hardware elements in the claimed manner. It is the result of certain <page-number citation-index=\"1\" label=\"813\">*813</page-number>structural \u201cmeans\u201d performing certain recited functions as explicitly sanctioned by 35 U.S.C. \u00a7 112, sixth paragraph. We disapprove the board\u2019s distillation of appellants\u2019 claim down to the information contained in the firmware in order to hold it nonstatutory. The invention is not claimed in that manner, and, in this case, we see no reason to view the claim format as a subterfuge for masking the presence of an essentially nonstatutory invention.</p>\n<p id=\"b903-5\">Even though the claimed invention is a machine, we must nevertheless determine whether the claim recites a mathematical algorithm, and, if so, whether it preempts the use of the algorithm. <em>In re Noll, </em>545 F.2d 141, 148, 191 USPQ 721, 726 (Cust. &amp; Pat.App.1976). In doing so, we apply the two-step test in <em>In re Freeman, </em>supra note 7.</p>\n<p id=\"b903-6\">When we examine appellants\u2019 invention as a whole under the first step of this test, including the information microprogrammed into the firmware element as depicted in Figs. 14(a-i) and 15(b-c), we fail to detect the presence of any <em>mathematical </em>algorithm. In altering information- in the system base as desired, certain \u201ccalculations\u201d are made, such as determining whether a given quantity is equal to zero, or, as noted by the solicitor, multiplying an address in memory by sixteen to arrive at another address. However, it certainly cannot be said that comparing with zero or multiplying by sixteen is preempted by appellants\u2019 claims. Furthermore, the presence of these calculations does not transform the invention as a whole into a method of calculation. <em>Cf. In re Gelnovatch, </em>supra note 7. There is no solution of an equation, such as the new alarm limit in <em>Flook, </em>or the equivalent pure binary number, as in <em>Benson, </em>present in the computer after the task has been completed. <em>See In re Chatfield, </em>supra note 7.</p>\n<p id=\"b903-7\">In summary, we have examined the claims thoroughly and we do not find any mathematical formula or mathematical method of calculation, improved or otherwise, which is either claimed as such or essential to the vitality of the claims. We find that the invention is a combination of tangible hardware elements \u2014 a machine-including some hardware elements which contain microprogrammed information termed \u201cfirmware.\u201d We do not find the invention to be nonstatutory under the authority of <em>Benson </em>or <em>Fiook, </em>or under the authority of our own cases, such as those cited at note 7 ante. Therefore, the decision of the board is <em>reversed.</em></p>\n<p id=\"b903-9\">\n<em>REVERSED.</em>\n</p>\n<footnote label=\"1\">\n<p id=\"b898-14\">. A scratchpad register, also known as a scratchpad memory, is a plurality of multibit storage locations, usually located in the central processing unit (CPU) of a computer, used for temporary storage of program information, operands, and calculation results for use by the computer\u2019s arithmetic and logic unit, and other information of a temporary nature.</p>\n</footnote>\n<footnote label=\"2\">\n<p id=\"b900-7\">. In <em>Benson, </em>the Supreme Court was clearly limiting its discussion to mathematical algorithms:</p>\n<blockquote id=\"b900-8\">The patent sought is on a method of programming a general-purpose digital computer to convert signals from binary-coded decimal form into pure binary form. <em>A procedure for solving a given type of mathematical problem is known as an \u201calgorithm.\u201d The procedures set forth in the present claims are of that kind; that is to say, they are a generalized formulation for programs to solve mathematical problems of converting one form of numerical representation to another. </em>[409 U.S. at 65, 93 S.Ct. at 254, 175 USPQ at 674 (emphasis ours).]</blockquote>\n<p id=\"b900-9\">It is not clear whether the examiner regarded appellants\u2019 invention as a mathematical algorithm, but, as will become evident, the board did so regard the invention.</p>\n</footnote>\n<footnote label=\"3\">\n<p id=\"b900-14\">. Claim 3, as well as dependent claims 4-6, explicitly recites firmware. Firmware is a term of art in the computer field and refers to mi-croinstructions permanently embodied in hardware elements. For a further discussion, <em>see generally </em>Ross, <em>The Patentability of Computer \u201cFirmware, </em>\u201d 59 JPOS 731 (1977). We need not and do not decide at this time whether firmware <em>per se </em>is statutory under 35 U.S.C. \u00a7 101 because the invention <em>as a whole </em>is not directed thereto. See our further discussion, infra.</p>\n</footnote>\n<footnote label=\"4\">\n<p id=\"b900-15\">. Waldbaum claim 1 reads in pertinent part:</p>\n<blockquote id=\"b900-16\">a method * * * to <em>count the number </em>of busy lines * * * <em>comparing means * * * to derive the number of I\u2019s </em>in said data word * * *. [Emphasis ours.]</blockquote>\n<p id=\"b900-20\">It is clear that this claim recites a mathematical algorithm. It solves a mathematical problem, to wit, <em>counting </em>a number of busy lines in a telephone system.</p>\n</footnote>\n<footnote label=\"5\">\n<p id=\"b901-7\">. <em>In re Christensen, </em>478 F.2d 1392, 178 USPQ 35 (Cust. &amp; Pat.App.1973).</p>\n</footnote>\n<footnote label=\"6\">\n<p id=\"b901-8\">. In <em>Benson, </em>the Court stated, 409 U.S. at 71, 93 S.Ct. at 257, 175 USPQ at 676 (emphasis ours):</p>\n<blockquote id=\"b901-9\">It is said that this decision precludes a patent for any program servicing a computer. <em>We do not so hold.</em></blockquote>\n<p id=\"b901-10\">In <em>Flook, </em>the Court stated, 437 U.S. at 595 n. 18, 98 S.Ct. at 2528, n. 18, 198 USPQ at 199 n. 18:</p>\n<blockquote id=\"b901-11\">Very simply, our holding today is that a claim for an improved method of calculation, even when tied to a specific end use, is un-patentable subject matter under \u00a7 101.</blockquote>\n</footnote>\n<footnote label=\"7\">\n<p id=\"b901-17\">. <em>See In re Gelnovatch, </em>595 F.2d 32, 36-37, 201 USPQ 136, 141 (Cust. &amp; Pat.App.1979); <em>In re Johnson, </em>589 F.2d 1070, 1075, 200 USPQ 199, 205 (Cust. &amp; Pat.App.1978); <em>In re Sarkar, </em>588 F.2d 1330, 1333, 200 USPQ 132, 137 (Cust. &amp; Pat.App.1978); <em>In re Freeman, </em>573 F.2d 1237, 1244, 197 USPQ 464, 470 (Cust. &amp; Pat.App.1978); <em>In re de Castelet, </em>562 F.2d 1236, 1240, 195 USPQ 439, 443 (Cust. &amp; Pat.App.1977); <em>In re Chatfield, </em>545 F.2d 152, 155-56, 191 USPQ 730, 733-34 (Cust. &amp; Pat.App.1976), <em>cert. denied, </em>434 U.S. 875, 98 S.Ct. 226, 54 L.Ed.2d 155, 195 USPQ 465 (1977).</p>\n</footnote>\n<footnote label=\"8\">\n<p id=\"b902-5\">. 35 U.S.C. \u00a7 101 states:</p>\n<blockquote id=\"b902-6\">Whoever invents or discovers any new and useful process, <em>machine, </em>manufacture, or composition of matter, <em>or any new and useful improvement thereof, </em>may obtain a patent therefor, subject to the conditions and requirements of this title. [Emphasis ours.]</blockquote>\n</footnote>\n<footnote label=\"9\">\n<p id=\"b902-7\">. 35 U.S.C. \u00a7\u00a7 102, 103.</p>\n</footnote>\n<footnote label=\"10\">\n<p id=\"b902-12\">. The control store of a computer is a plurality of multibit storage locations (memory) containing microinstructions, which, when decoded by appropriate circuitry, provide control signals which cause specific operations to take place in the computer\u2019s CPU.</p>\n</footnote>\n</opinion>\n</casebody>\n",
    "status": "ok"
  }
}